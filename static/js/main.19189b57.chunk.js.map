{"version":3,"sources":["components/common/Error/Error.js","redux/reducer.js","assets/images/searchIcon.png","redux/selectors.js","components/Header/Search/Search.js","components/Header/Header.js","components/Movies/AboutFilm/AboutFilm.js","assets/images/loader.svg","components/common/Preloader.js","components/Pagination/Pagination.js","components/Movies/MovieCard/MovieCard.js","components/Movies/Sorting/Sorting.js","components/Movies/Movies.js","components/Movies/MoviesContainer.js","App.js","reportWebVitals.js","api/api.js","redux/saga/moviesSaga.js","redux/saga/filmInfoSaga.js","redux/store.js","index.js"],"names":["Error","FETCHED_MOVIES","FETCHED_FILM_INFO","SET_SEARCH_VALUE","SET_CURRENT_PAGE","SET_FILM_INFO","SET_SORT_NAME","TOGGLE_FETCHING","SET_MOVIES","SET_FETCH_ERROR","initialState","allMovies","searchValue","filmInfo","currentPage","isFetching","sortBy","isFetchError","setMovies","payload","type","setFilmInfo","toggleFetching","getFilterMovies","sort","a","b","vote_average","title","toLowerCase","getSortMovies","filter","film","includes","getMovies","connect","searchInputValue","setSearchValue","props","className","onChange","e","target","value","placeholder","src","searchIcon","Header","to","state","fetchedFilmInfo","id","useParams","useEffect","backdrop_path","original_title","overview","budget","Preloader","loader","setCurrentPage","getPageNumber","textContent","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","map","MovieCard","poster","rating","setSortName","current","Movies","movies","poster_path","pageNumber","isError","fetchedMovies","console","log","App","basename","process","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","getPopularMovies","get","getInformationAboutFilm","allMoviesWorker","allMoviesWatcher","action","put","call","data","results","takeEvery","filmInfoWorker","filmInfoWatcher","rootSaga","all","saga","createSagaMiddleware","require","store","createStore","applyMiddleware","thunk","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19189b57.chunk.js","sourcesContent":["const Error = () => {\r\n    return (\r\n        <>\r\n           <h2>Error</h2>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Error;","export const FETCHED_MOVIES = 'FETCHED_MOVIES';\r\nexport const FETCHED_FILM_INFO = 'FETCHED_FILM_INFO';\r\nconst SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_FILM_INFO = 'SET_FILM_INFO';\r\nconst SET_SORT_NAME = 'SET_SORT_NAME';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nconst SET_MOVIES = 'SET_MOVIES';\r\nconst SET_FETCH_ERROR = 'SET_FETCH_ERROR';\r\n\r\nconst initialState = {\r\n    allMovies: [],\r\n    searchValue: '',\r\n    filmInfo: {},\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    sortBy: '',\r\n    isFetchError: false\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_MOVIES:\r\n            return {\r\n                ...state,\r\n                allMovies: action.payload\r\n            };\r\n        case SET_SEARCH_VALUE:\r\n            return {\r\n                ...state,\r\n                searchValue: action.payload\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            };\r\n        case SET_FILM_INFO:\r\n            return {\r\n                ...state,\r\n                filmInfo: action.payload\r\n            };\r\n        case SET_SORT_NAME:\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload\r\n            };\r\n        case TOGGLE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case SET_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetchError: action.isFetchError\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setMovies = (payload) => ({\r\n    type: SET_MOVIES,\r\n    payload\r\n})\r\n\r\nexport const fetchedMovies = (payload) => ({\r\n    type: FETCHED_MOVIES,\r\n    payload\r\n})\r\n\r\nexport const fetchedFilmInfo = (payload) => ({\r\n    type: FETCHED_FILM_INFO,\r\n    payload\r\n})\r\n\r\nexport const setSearchValue = (payload) => ({\r\n    type: SET_SEARCH_VALUE,\r\n    payload\r\n})\r\n\r\nexport const setCurrentPage = (payload) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    payload\r\n})\r\n\r\nexport const setFilmInfo = (payload) => ({\r\n    type: SET_FILM_INFO,\r\n    payload\r\n})\r\n\r\nexport const setSortName = (payload) => ({\r\n    type: SET_SORT_NAME,\r\n    payload\r\n})\r\n\r\nexport const toggleFetching = (isFetching) => ({\r\n    type: TOGGLE_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const setError = (isFetchError) => ({\r\n    type: SET_FETCH_ERROR,\r\n    isFetchError\r\n})\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/searchIcon.7576ac8c.png\";","const getMovies = (allMovies, searchValue) => {\r\n    if (searchValue === '') {\r\n        return allMovies;\r\n    }\r\n    return allMovies.filter(film => film.title.toLowerCase().includes(searchValue));\r\n}\r\n\r\nconst getSortMovies = (allMovies, sortBy) => {\r\n    switch (sortBy) {\r\n        case 'vote_average':\r\n            return allMovies.sort((a, b) => { return a.vote_average - b.vote_average });\r\n        case 'title':\r\n            return allMovies.sort((a, b) => {\r\n                if (a.title.toLowerCase() < b.title.toLowerCase()) { return -1; }\r\n                if (a.title.toLowerCase() > b.title.toLowerCase()) { return 1; }\r\n                return 0;\r\n            });\r\n        default:\r\n            return allMovies;\r\n    }\r\n}\r\n\r\nexport const getPageNumber = (currentPage) => {\r\n    return currentPage;\r\n}\r\n\r\nexport const getIsFetching = (isFetching) => {\r\n    return isFetching;\r\n}\r\n\r\nexport const getIsError = (isFetchError) => {\r\n    return isFetchError;\r\n}\r\n\r\nexport const getSortBy = (sortBy) => {\r\n    return sortBy;\r\n}\r\n\r\nexport const getFilterMovies = (allMovies, searchValue, sortBy) => {\r\n    return getSortMovies(getMovies(allMovies, searchValue), sortBy);\r\n}\r\n\r\nexport const getSearchValue = (searchValue) => {\r\n    return  searchValue;\r\n}","import { connect } from 'react-redux';\r\nimport { setSearchValue } from '../../../redux/reducer';\r\nimport './search.scss';\r\nimport searchIcon from './../../../assets/images/searchIcon.png';\r\nimport { getSearchValue } from '../../../redux/selectors';\r\n\r\nfunction Search(props) {\r\n\r\n    const getSearchValue = (e) => {\r\n        props.setSearchValue(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='search'>\r\n            <input onChange={getSearchValue} value={props.searchInputValue} placeholder='Search...'></input>\r\n            <img src={searchIcon}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = function ({searchValue}) {\r\n    return {\r\n        searchInputValue: getSearchValue(searchValue)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setSearchValue })(Search);","import { NavLink } from 'react-router-dom';\r\nimport './header.scss';\r\nimport Search from './Search/Search.js';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header'>\r\n            <NavLink to='/'>\r\n                <h3>Movie App</h3>\r\n            </NavLink>\r\n            <Search />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { fetchedFilmInfo } from '../../../redux/reducer';\r\nimport './aboutFilm.scss';\r\n\r\nfunction AboutFilm(props) {\r\n   const { id } = useParams();\r\n  \r\n    useEffect(() => {        \r\n        props.fetchedFilmInfo(id);\r\n    }, []);\r\n    \r\n    return (\r\n        <div className='about-film'>\r\n            <div className='poster'>\r\n                <img src={`https://image.tmdb.org/t/p/w500/${props.filmInfo.backdrop_path}`}/>\r\n            </div>\r\n            <div className='about'>\r\n                <h1>{props.filmInfo.original_title}</h1>\r\n                <h2>Description:</h2><p> {props.filmInfo.overview}</p>\r\n                <h2>Rating: {props.filmInfo.vote_average}</h2>\r\n                <h2>Budget: {props.filmInfo.budget}$</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        filmInfo: state.filmInfo\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchedFilmInfo})(AboutFilm);","export default __webpack_public_path__ + \"static/media/loader.68b34446.svg\";","import loader from './../../assets/images/loader.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <>\r\n            <img src={loader} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Preloader;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentPage } from '../../redux/reducer';\r\nimport { getPageNumber } from '../../redux/selectors';\r\nimport './pagination.scss';\r\n\r\nfunction Pagination(props) {\r\n\r\n    const getPageNumber = (e) => {\r\n        props.setCurrentPage(+e.target.textContent);\r\n    }\r\n\r\n    let pageSize = 5;\r\n    let pageCount = Math.ceil(200 / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionSize = 5;\r\n    let portionCount = Math.ceil(pageCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className='pagination' >\r\n            { portionNumber > 1 &&\r\n                <button className='nav-btn' onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={props.currentPage === p && 'page-active'} key={p} onClick={getPageNumber}>{p}</span>\r\n                })}\r\n            { portionCount > portionNumber &&\r\n                <button className='nav-btn' onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = function ({currentPage}) {\r\n    return {\r\n        currentPage: getPageNumber(currentPage)\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { setCurrentPage })(Pagination);","import { NavLink } from 'react-router-dom';\r\nimport './movieCard.scss';\r\n\r\nfunction MovieCard(props) {\r\n    return (\r\n        <div className='movie-card'>\r\n            <NavLink to={`/about/${props.id}`}>\r\n                <img src={`https://image.tmdb.org/t/p/w500/${props.poster}`}></img>\r\n                <h5>{props.title}</h5>\r\n                <div>Rating: {props.rating}</div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCard;","import { connect } from 'react-redux';\r\nimport { setSortName } from '../../../redux/reducer';\r\nimport './sorting.scss';\r\n\r\nfunction Sorting(props) {\r\n\r\n    const sortBy = (current) => {        \r\n        props.setSortName(current);       \r\n    }\r\n\r\n    return (\r\n        <div className='sort'>\r\n             <button onClick={() => sortBy('title')}>Sort by Name</button> \r\n             <button onClick={() => sortBy('vote_average')}>Sort by Rating</button>         \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(null, { setSortName })(Sorting);","import Pagination from '../Pagination/Pagination';\r\nimport MovieCard from './MovieCard/MovieCard';\r\nimport './movies.scss';\r\nimport Sorting from './Sorting/Sorting';\r\n\r\nfunction Movies(props) {\r\n    return (\r\n        <>\r\n            <Sorting />\r\n            <div className='movies'>\r\n                {props.movies\r\n                    .map((film) => <MovieCard key={film.id} title={film.title}\r\n                        poster={film.poster_path} rating={film.vote_average} id={film.id} />)}\r\n            </div>\r\n            <Pagination />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Movies;","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport {  fetchedMovies } from '../../redux/reducer';\r\nimport { getFilterMovies, getIsError, getIsFetching, getPageNumber, getSortBy, getSortMovies } from '../../redux/selectors';\r\nimport Preloader from '../common/Preloader';\r\nimport Movies from './Movies';\r\nimport './movies.scss';\r\n\r\n\r\nfunction MoviesContainer(props) {\r\n\r\n    useEffect(() => {\r\n        console.log(props.pageNumber);\r\n        props.fetchedMovies( props.pageNumber);\r\n    }, [props.sortBy, props.pageNumber]);\r\n\r\n    if (props.isError) {\r\n        return <Redirect to=\"/error\"/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.isFetching &&\r\n                <Preloader />}\r\n            <Movies {...props} />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = function ({ allMovies, searchValue, sortBy, currentPage, isFetching, isFetchError }) {\r\n    return {\r\n        movies: getFilterMovies(allMovies, searchValue, sortBy),\r\n        pageNumber: getPageNumber(currentPage),\r\n        isFetching: getIsFetching(isFetching),\r\n        sortBy: getSortBy(sortBy),\r\n        isError: getIsError(isFetchError)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {  fetchedMovies })(MoviesContainer);\r\n","import {  HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\nimport Error from './components/common/Error/Error';\nimport Header from './components/Header/Header';\nimport AboutFilm from './components/Movies/AboutFilm/AboutFilm';\nimport MoviesContainer from './components/Movies/MoviesContainer';\n\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div className='App'>\n        <Header />\n        <Route path='/' exact render={() => <MoviesContainer />} />\n        <Route path='/about/:id' render={() => <AboutFilm />} />\n        <Route path='/error' render={() => <Error />} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/'\r\n});\r\n\r\nexport const getPopularMovies = (pageNumber) => {\r\n    return instance.get(`/movie/popular?api_key=dcbc538ac3bc9a8a7fedd4b3a3f98eef&language=en-US&page=${pageNumber}`)\r\n}\r\n\r\nexport const getInformationAboutFilm = (id) => {\r\n    return instance.get(`/movie/${id}?api_key=dcbc538ac3bc9a8a7fedd4b3a3f98eef&language&language=en-US`)\r\n}","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getPopularMovies } from \"../../api/api\";\r\nimport { setMovies, FETCHED_MOVIES, toggleFetching, setError } from \"../reducer\"\r\n\r\nexport function* allMoviesWorker(action) {\r\n    try {\r\n        yield put(toggleFetching(true));\r\n        const payload = yield call(getPopularMovies, action.payload);\r\n        yield put(toggleFetching(false));\r\n        yield put(setMovies(payload.data.results));\r\n    } catch (e) {\r\n        yield put(setError(true));\r\n    }\r\n}\r\n\r\nexport function* allMoviesWatcher() {\r\n    yield takeEvery(FETCHED_MOVIES, allMoviesWorker);\r\n}\r\n","import {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport { getInformationAboutFilm } from \"../../api/api\";\r\nimport {setFilmInfo, FETCHED_FILM_INFO } from \"../reducer\"\r\n\r\nexport function* filmInfoWorker(action) {    \r\n    const payload = yield call(getInformationAboutFilm, action.payload);    \r\n    yield put(setFilmInfo(payload.data));\r\n}\r\n\r\nexport function* filmInfoWatcher() {\r\n   yield takeEvery(FETCHED_FILM_INFO, filmInfoWorker);\r\n}\r\n\r\n\r\n","import thunk from \"redux-thunk\";\r\nimport {all} from \"redux-saga/effects\";\r\nimport { reducer } from \"./reducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { allMoviesWatcher} from \"./saga/moviesSaga\";\r\nimport { filmInfoWatcher } from \"./saga/filmInfoSaga\";\r\n\r\nfunction * rootSaga() {\r\n    yield all ( [\r\n      allMoviesWatcher(),\r\n      filmInfoWatcher()\r\n    ])\r\n  }\r\n\r\nconst saga = createSagaMiddleware();\r\nconst { createStore, applyMiddleware } = require(\"redux\");\r\n\r\nlet store = createStore(reducer, applyMiddleware(thunk, saga));\r\n\r\nsaga.run(rootSaga);\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>    \n      <Provider store={store}>\n        <App />\n      </Provider>    \n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}